{"version":3,"file":"component---src-pages-search-tsx-cbaa5a33c476064dd50c.js","mappings":"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","sources":["webpack://video-translator-ai/./src/components/BlogSearch.tsx","webpack://video-translator-ai/./src/pages/search.tsx","webpack://video-translator-ai/./node_modules/query-string/node_modules/decode-uri-component/index.js","webpack://video-translator-ai/./node_modules/split-on-first/index.js","webpack://video-translator-ai/./node_modules/filter-obj/index.js","webpack://video-translator-ai/./node_modules/query-string/base.js","webpack://video-translator-ai/./node_modules/query-string/index.js"],"sourcesContent":["import React from \"react\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faMagnifyingGlass } from \"@fortawesome/free-solid-svg-icons\";\n\ninterface IBlogSearch {\n  placeholder?: string;\n  defaultValue?: any;\n}\n\nconst BlogSearch = ({ placeholder, defaultValue }: IBlogSearch) => {\n  return (\n    <form\n      method=\"GET\"\n      action=\"/search\"\n      className=\"input-search-language input-group\"\n    >\n      <input\n        type=\"text\"\n        name=\"q\"\n        defaultValue={defaultValue}\n        className=\"form-control\"\n        placeholder={placeholder}\n        aria-label={placeholder}\n        aria-describedby=\"button-find-blog\"\n        required\n        minLength={3}\n      />\n      <button className=\"btn btn-primary\" type=\"submit\" id=\"button-find-blog\">\n        <FontAwesomeIcon icon={faMagnifyingGlass} />\n      </button>\n    </form>\n  );\n};\n\nexport default BlogSearch;\n","import * as React from \"react\";\nimport type { HeadFC, PageProps } from \"gatsby\";\nimport { graphql } from \"gatsby\";\nimport { Link, useTranslation } from \"gatsby-plugin-react-i18next\";\nimport queryString from \"query-string\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport {\n  faArrowDownWideShort,\n  faArrowUpWideShort,\n} from \"@fortawesome/free-solid-svg-icons\";\n\nimport BlogCard from \"../components/BlogCard\";\nimport BlogSearch from \"../components/BlogSearch\";\nimport Layout from \"../components/Layout\";\nimport Helper from \"../components/Helper\";\nimport Seo from \"../components/Seo\";\nimport { H2 } from \"../components/Typography\";\n\nconst sortByData = [\"Newer to older\", \"Older to newer\"];\n\nconst SearchPage: React.FC<PageProps> = ({ data, location }: any) => {\n  const { t } = useTranslation();\n  const blogPostDataDesc = data?.blogPostDataDesc?.nodes;\n  const blogPostDataAsc = data?.blogPostDataAsc?.nodes;\n  const [blogPosts, setBlogPosts] = React.useState([]);\n  const [sortAsc, setSortAsc] = React.useState(true);\n  const blogPostData = sortAsc ? blogPostDataDesc : blogPostDataAsc;\n  const [totalData, setTotalData] = React.useState(0);\n  const params = queryString.parse(location.search);\n\n  React.useEffect(() => {\n    if (!params?.q) {\n      if (typeof window !== \"undefined\") {\n        window.location.replace(\"/blog\");\n      }\n    } else {\n      // @ts-ignore\n      const filterData = blogPostData.filter(\n        ({ title, description }: any) =>\n          title.match(new RegExp(`\\\\b${params.q}\\\\b`, \"i\")) ||\n          description.match(new RegExp(`\\\\b${params.q}\\\\b`, \"i\"))\n      );\n      setTotalData(filterData.length);\n      setBlogPosts(filterData);\n    }\n  }, []);\n\n  React.useEffect(() => {\n    const filterData = blogPostData.filter(\n      ({ title, description }: any) =>\n        title.match(new RegExp(`\\\\b${params.q}\\\\b`, \"i\")) ||\n        description.match(new RegExp(`\\\\b${params.q}\\\\b`, \"i\"))\n    );\n    setBlogPosts(filterData);\n  }, [sortAsc]);\n\n  return (\n    <Layout>\n      <div className=\"container my-5 min-h-page\">\n        <H2 classes={`mb-3 text-left`}>\n          {t(\"vtaiBlogSeach\", { keyword: params?.q })}\n        </H2>\n        <div className=\"custom-page-content fw-light lh-lg py-3\">\n          <div className=\"row\">\n            <div className=\"d-flex justify-content-between pb-3\">\n              <BlogSearch\n                placeholder={t(\"typeHere\") || \"\"}\n                defaultValue={params?.q}\n              />\n              <div className=\"dropdown text-end\">\n                <button\n                  type=\"button\"\n                  className=\"d-flex align-items-center btn btn-outline-primary dropdown-toggle\"\n                  data-bs-toggle=\"dropdown\"\n                  aria-expanded=\"false\"\n                  data-bs-offset=\"10,20\"\n                >\n                  <span className=\"d-none d-md-block\">\n                    Sort by{\" \"}\n                    {!sortAsc\n                      ? sortByData[0].toLowerCase()\n                      : sortByData[1].toLowerCase()}\n                  </span>\n                  <span className=\"d-block d-md-none\">\n                    {\" \"}\n                    {!sortAsc ? (\n                      <FontAwesomeIcon icon={faArrowDownWideShort} />\n                    ) : (\n                      <FontAwesomeIcon icon={faArrowUpWideShort} />\n                    )}\n                  </span>\n                </button>\n                <ul className=\"dropdown-menu\">\n                  <li>\n                    <button\n                      className={`dropdown-item ${sortAsc ? \"active\" : \"\"}`}\n                      onClick={() => setSortAsc(true)}\n                    >\n                      {sortByData[0]}\n                    </button>\n                  </li>\n                  <li>\n                    <button\n                      className={`dropdown-item ${sortAsc ? \"\" : \"active\"}`}\n                      onClick={() => setSortAsc(false)}\n                    >\n                      {sortByData[1]}\n                    </button>\n                  </li>\n                </ul>\n              </div>\n            </div>\n\n            {totalData > 0 ? (\n              blogPosts.map(\n                ({\n                  id,\n                  cover,\n                  coverAlt,\n                  title,\n                  slug,\n                  description,\n                  postedDate,\n                }: any) => (\n                  <div\n                    key={`post-${id}`}\n                    className=\"col-12 col-md-6 col-lg-4 mb-4\"\n                  >\n                    <BlogCard\n                      cover={cover}\n                      coverAlt={coverAlt}\n                      title={title}\n                      slug={slug}\n                      description={description}\n                      postedDate={postedDate}\n                    />\n                  </div>\n                )\n              )\n            ) : (\n              <div className=\"mx-0\">\n                <div className=\"border rounded col-12 py-5 mx-auto text-center\">\n                  <div className=\"d-flex flex-column align-items-center justify-content-center gap-3 py-5\">\n                    <span className=\"text-404 fw-bold\">404</span>\n                    <span className=\"fs-4\">{t(\"emptyResult\")}</span>\n                    <Link to=\"/\">\n                      <button className=\"btn btn-link\" type=\"button\">\n                        {t(\"backToHomepage\")}\n                      </button>\n                    </Link>\n                  </div>\n                </div>\n              </div>\n            )}\n          </div>\n        </div>\n      </div>\n      <Helper />\n    </Layout>\n  );\n};\n\nexport default SearchPage;\n\nexport const query = graphql`\n  query ($language: String!) {\n    locales: allLocale(\n      filter: { ns: { in: [\"index\", \"blog\"] }, language: { eq: $language } }\n    ) {\n      edges {\n        node {\n          ns\n          data\n          language\n        }\n      }\n    }\n    blogPostDataDesc: allStrapiBlog(\n      filter: { locale: { eq: $language } }\n      sort: { postedDate: DESC }\n      limit: 1000\n    ) {\n      nodes {\n        id\n        strapi_id\n        title\n        slug\n        description\n        cover {\n          localFile {\n            childImageSharp {\n              gatsbyImageData\n            }\n          }\n        }\n        coverAlt\n        postedDate(formatString: \"MMM DD, YYYY\")\n        blogCategories {\n          categoryName\n        }\n      }\n    }\n    blogPostDataAsc: allStrapiBlog(\n      filter: { locale: { eq: $language } }\n      sort: { postedDate: ASC }\n      limit: 1000\n    ) {\n      nodes {\n        id\n        strapi_id\n        title\n        slug\n        description\n        cover {\n          localFile {\n            childImageSharp {\n              gatsbyImageData\n            }\n          }\n        }\n        coverAlt\n        postedDate(formatString: \"MMM DD, YYYY\")\n        blogCategories {\n          categoryName\n        }\n      }\n    }\n  }\n`;\n\nexport const Head: HeadFC = () => <Seo title=\"Blog Search\" />;\n","const token = '%[a-f0-9]{2}';\nconst singleMatcher = new RegExp('(' + token + ')|([^%]+?)', 'gi');\nconst multiMatcher = new RegExp('(' + token + ')+', 'gi');\n\nfunction decodeComponents(components, split) {\n\ttry {\n\t\t// Try to decode the entire string first\n\t\treturn [decodeURIComponent(components.join(''))];\n\t} catch {\n\t\t// Do nothing\n\t}\n\n\tif (components.length === 1) {\n\t\treturn components;\n\t}\n\n\tsplit = split || 1;\n\n\t// Split the array in 2 parts\n\tconst left = components.slice(0, split);\n\tconst right = components.slice(split);\n\n\treturn Array.prototype.concat.call([], decodeComponents(left), decodeComponents(right));\n}\n\nfunction decode(input) {\n\ttry {\n\t\treturn decodeURIComponent(input);\n\t} catch {\n\t\tlet tokens = input.match(singleMatcher) || [];\n\n\t\tfor (let i = 1; i < tokens.length; i++) {\n\t\t\tinput = decodeComponents(tokens, i).join('');\n\n\t\t\ttokens = input.match(singleMatcher) || [];\n\t\t}\n\n\t\treturn input;\n\t}\n}\n\nfunction customDecodeURIComponent(input) {\n\t// Keep track of all the replacements and prefill the map with the `BOM`\n\tconst replaceMap = {\n\t\t'%FE%FF': '\\uFFFD\\uFFFD',\n\t\t'%FF%FE': '\\uFFFD\\uFFFD',\n\t};\n\n\tlet match = multiMatcher.exec(input);\n\twhile (match) {\n\t\ttry {\n\t\t\t// Decode as big chunks as possible\n\t\t\treplaceMap[match[0]] = decodeURIComponent(match[0]);\n\t\t} catch {\n\t\t\tconst result = decode(match[0]);\n\n\t\t\tif (result !== match[0]) {\n\t\t\t\treplaceMap[match[0]] = result;\n\t\t\t}\n\t\t}\n\n\t\tmatch = multiMatcher.exec(input);\n\t}\n\n\t// Add `%C2` at the end of the map to make sure it does not replace the combinator before everything else\n\treplaceMap['%C2'] = '\\uFFFD';\n\n\tconst entries = Object.keys(replaceMap);\n\n\tfor (const key of entries) {\n\t\t// Replace all decoded components\n\t\tinput = input.replace(new RegExp(key, 'g'), replaceMap[key]);\n\t}\n\n\treturn input;\n}\n\nexport default function decodeUriComponent(encodedURI) {\n\tif (typeof encodedURI !== 'string') {\n\t\tthrow new TypeError('Expected `encodedURI` to be of type `string`, got `' + typeof encodedURI + '`');\n\t}\n\n\ttry {\n\t\t// Try the built in decoder first\n\t\treturn decodeURIComponent(encodedURI);\n\t} catch {\n\t\t// Fallback to a more advanced decoder\n\t\treturn customDecodeURIComponent(encodedURI);\n\t}\n}\n","export default function splitOnFirst(string, separator) {\n\tif (!(typeof string === 'string' && typeof separator === 'string')) {\n\t\tthrow new TypeError('Expected the arguments to be of type `string`');\n\t}\n\n\tif (string === '' || separator === '') {\n\t\treturn [];\n\t}\n\n\tconst separatorIndex = string.indexOf(separator);\n\n\tif (separatorIndex === -1) {\n\t\treturn [];\n\t}\n\n\treturn [\n\t\tstring.slice(0, separatorIndex),\n\t\tstring.slice(separatorIndex + separator.length)\n\t];\n}\n","export function includeKeys(object, predicate) {\n\tconst result = {};\n\n\tif (Array.isArray(predicate)) {\n\t\tfor (const key of predicate) {\n\t\t\tconst descriptor = Object.getOwnPropertyDescriptor(object, key);\n\t\t\tif (descriptor?.enumerable) {\n\t\t\t\tObject.defineProperty(result, key, descriptor);\n\t\t\t}\n\t\t}\n\t} else {\n\t\t// `Reflect.ownKeys()` is required to retrieve symbol properties\n\t\tfor (const key of Reflect.ownKeys(object)) {\n\t\t\tconst descriptor = Object.getOwnPropertyDescriptor(object, key);\n\t\t\tif (descriptor.enumerable) {\n\t\t\t\tconst value = object[key];\n\t\t\t\tif (predicate(key, value, object)) {\n\t\t\t\t\tObject.defineProperty(result, key, descriptor);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\treturn result;\n}\n\nexport function excludeKeys(object, predicate) {\n\tif (Array.isArray(predicate)) {\n\t\tconst set = new Set(predicate);\n\t\treturn includeKeys(object, key => !set.has(key));\n\t}\n\n\treturn includeKeys(object, (key, value, object) => !predicate(key, value, object));\n}\n","import decodeComponent from 'decode-uri-component';\nimport splitOnFirst from 'split-on-first';\nimport {includeKeys} from 'filter-obj';\n\nconst isNullOrUndefined = value => value === null || value === undefined;\n\n// eslint-disable-next-line unicorn/prefer-code-point\nconst strictUriEncode = string => encodeURIComponent(string).replace(/[!'()*]/g, x => `%${x.charCodeAt(0).toString(16).toUpperCase()}`);\n\nconst encodeFragmentIdentifier = Symbol('encodeFragmentIdentifier');\n\nfunction encoderForArrayFormat(options) {\n\tswitch (options.arrayFormat) {\n\t\tcase 'index': {\n\t\t\treturn key => (result, value) => {\n\t\t\t\tconst index = result.length;\n\n\t\t\t\tif (\n\t\t\t\t\tvalue === undefined\n\t\t\t\t\t|| (options.skipNull && value === null)\n\t\t\t\t\t|| (options.skipEmptyString && value === '')\n\t\t\t\t) {\n\t\t\t\t\treturn result;\n\t\t\t\t}\n\n\t\t\t\tif (value === null) {\n\t\t\t\t\treturn [\n\t\t\t\t\t\t...result, [encode(key, options), '[', index, ']'].join(''),\n\t\t\t\t\t];\n\t\t\t\t}\n\n\t\t\t\treturn [\n\t\t\t\t\t...result,\n\t\t\t\t\t[encode(key, options), '[', encode(index, options), ']=', encode(value, options)].join(''),\n\t\t\t\t];\n\t\t\t};\n\t\t}\n\n\t\tcase 'bracket': {\n\t\t\treturn key => (result, value) => {\n\t\t\t\tif (\n\t\t\t\t\tvalue === undefined\n\t\t\t\t\t|| (options.skipNull && value === null)\n\t\t\t\t\t|| (options.skipEmptyString && value === '')\n\t\t\t\t) {\n\t\t\t\t\treturn result;\n\t\t\t\t}\n\n\t\t\t\tif (value === null) {\n\t\t\t\t\treturn [\n\t\t\t\t\t\t...result,\n\t\t\t\t\t\t[encode(key, options), '[]'].join(''),\n\t\t\t\t\t];\n\t\t\t\t}\n\n\t\t\t\treturn [\n\t\t\t\t\t...result,\n\t\t\t\t\t[encode(key, options), '[]=', encode(value, options)].join(''),\n\t\t\t\t];\n\t\t\t};\n\t\t}\n\n\t\tcase 'colon-list-separator': {\n\t\t\treturn key => (result, value) => {\n\t\t\t\tif (\n\t\t\t\t\tvalue === undefined\n\t\t\t\t\t|| (options.skipNull && value === null)\n\t\t\t\t\t|| (options.skipEmptyString && value === '')\n\t\t\t\t) {\n\t\t\t\t\treturn result;\n\t\t\t\t}\n\n\t\t\t\tif (value === null) {\n\t\t\t\t\treturn [\n\t\t\t\t\t\t...result,\n\t\t\t\t\t\t[encode(key, options), ':list='].join(''),\n\t\t\t\t\t];\n\t\t\t\t}\n\n\t\t\t\treturn [\n\t\t\t\t\t...result,\n\t\t\t\t\t[encode(key, options), ':list=', encode(value, options)].join(''),\n\t\t\t\t];\n\t\t\t};\n\t\t}\n\n\t\tcase 'comma':\n\t\tcase 'separator':\n\t\tcase 'bracket-separator': {\n\t\t\tconst keyValueSep = options.arrayFormat === 'bracket-separator'\n\t\t\t\t? '[]='\n\t\t\t\t: '=';\n\n\t\t\treturn key => (result, value) => {\n\t\t\t\tif (\n\t\t\t\t\tvalue === undefined\n\t\t\t\t\t|| (options.skipNull && value === null)\n\t\t\t\t\t|| (options.skipEmptyString && value === '')\n\t\t\t\t) {\n\t\t\t\t\treturn result;\n\t\t\t\t}\n\n\t\t\t\t// Translate null to an empty string so that it doesn't serialize as 'null'\n\t\t\t\tvalue = value === null ? '' : value;\n\n\t\t\t\tif (result.length === 0) {\n\t\t\t\t\treturn [[encode(key, options), keyValueSep, encode(value, options)].join('')];\n\t\t\t\t}\n\n\t\t\t\treturn [[result, encode(value, options)].join(options.arrayFormatSeparator)];\n\t\t\t};\n\t\t}\n\n\t\tdefault: {\n\t\t\treturn key => (result, value) => {\n\t\t\t\tif (\n\t\t\t\t\tvalue === undefined\n\t\t\t\t\t|| (options.skipNull && value === null)\n\t\t\t\t\t|| (options.skipEmptyString && value === '')\n\t\t\t\t) {\n\t\t\t\t\treturn result;\n\t\t\t\t}\n\n\t\t\t\tif (value === null) {\n\t\t\t\t\treturn [\n\t\t\t\t\t\t...result,\n\t\t\t\t\t\tencode(key, options),\n\t\t\t\t\t];\n\t\t\t\t}\n\n\t\t\t\treturn [\n\t\t\t\t\t...result,\n\t\t\t\t\t[encode(key, options), '=', encode(value, options)].join(''),\n\t\t\t\t];\n\t\t\t};\n\t\t}\n\t}\n}\n\nfunction parserForArrayFormat(options) {\n\tlet result;\n\n\tswitch (options.arrayFormat) {\n\t\tcase 'index': {\n\t\t\treturn (key, value, accumulator) => {\n\t\t\t\tresult = /\\[(\\d*)]$/.exec(key);\n\n\t\t\t\tkey = key.replace(/\\[\\d*]$/, '');\n\n\t\t\t\tif (!result) {\n\t\t\t\t\taccumulator[key] = value;\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tif (accumulator[key] === undefined) {\n\t\t\t\t\taccumulator[key] = {};\n\t\t\t\t}\n\n\t\t\t\taccumulator[key][result[1]] = value;\n\t\t\t};\n\t\t}\n\n\t\tcase 'bracket': {\n\t\t\treturn (key, value, accumulator) => {\n\t\t\t\tresult = /(\\[])$/.exec(key);\n\t\t\t\tkey = key.replace(/\\[]$/, '');\n\n\t\t\t\tif (!result) {\n\t\t\t\t\taccumulator[key] = value;\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tif (accumulator[key] === undefined) {\n\t\t\t\t\taccumulator[key] = [value];\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\taccumulator[key] = [...accumulator[key], value];\n\t\t\t};\n\t\t}\n\n\t\tcase 'colon-list-separator': {\n\t\t\treturn (key, value, accumulator) => {\n\t\t\t\tresult = /(:list)$/.exec(key);\n\t\t\t\tkey = key.replace(/:list$/, '');\n\n\t\t\t\tif (!result) {\n\t\t\t\t\taccumulator[key] = value;\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tif (accumulator[key] === undefined) {\n\t\t\t\t\taccumulator[key] = [value];\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\taccumulator[key] = [...accumulator[key], value];\n\t\t\t};\n\t\t}\n\n\t\tcase 'comma':\n\t\tcase 'separator': {\n\t\t\treturn (key, value, accumulator) => {\n\t\t\t\tconst isArray = typeof value === 'string' && value.includes(options.arrayFormatSeparator);\n\t\t\t\tconst isEncodedArray = (typeof value === 'string' && !isArray && decode(value, options).includes(options.arrayFormatSeparator));\n\t\t\t\tvalue = isEncodedArray ? decode(value, options) : value;\n\t\t\t\tconst newValue = isArray || isEncodedArray ? value.split(options.arrayFormatSeparator).map(item => decode(item, options)) : (value === null ? value : decode(value, options));\n\t\t\t\taccumulator[key] = newValue;\n\t\t\t};\n\t\t}\n\n\t\tcase 'bracket-separator': {\n\t\t\treturn (key, value, accumulator) => {\n\t\t\t\tconst isArray = /(\\[])$/.test(key);\n\t\t\t\tkey = key.replace(/\\[]$/, '');\n\n\t\t\t\tif (!isArray) {\n\t\t\t\t\taccumulator[key] = value ? decode(value, options) : value;\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tconst arrayValue = value === null\n\t\t\t\t\t? []\n\t\t\t\t\t: value.split(options.arrayFormatSeparator).map(item => decode(item, options));\n\n\t\t\t\tif (accumulator[key] === undefined) {\n\t\t\t\t\taccumulator[key] = arrayValue;\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\taccumulator[key] = [...accumulator[key], ...arrayValue];\n\t\t\t};\n\t\t}\n\n\t\tdefault: {\n\t\t\treturn (key, value, accumulator) => {\n\t\t\t\tif (accumulator[key] === undefined) {\n\t\t\t\t\taccumulator[key] = value;\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\taccumulator[key] = [...[accumulator[key]].flat(), value];\n\t\t\t};\n\t\t}\n\t}\n}\n\nfunction validateArrayFormatSeparator(value) {\n\tif (typeof value !== 'string' || value.length !== 1) {\n\t\tthrow new TypeError('arrayFormatSeparator must be single character string');\n\t}\n}\n\nfunction encode(value, options) {\n\tif (options.encode) {\n\t\treturn options.strict ? strictUriEncode(value) : encodeURIComponent(value);\n\t}\n\n\treturn value;\n}\n\nfunction decode(value, options) {\n\tif (options.decode) {\n\t\treturn decodeComponent(value);\n\t}\n\n\treturn value;\n}\n\nfunction keysSorter(input) {\n\tif (Array.isArray(input)) {\n\t\treturn input.sort();\n\t}\n\n\tif (typeof input === 'object') {\n\t\treturn keysSorter(Object.keys(input))\n\t\t\t.sort((a, b) => Number(a) - Number(b))\n\t\t\t.map(key => input[key]);\n\t}\n\n\treturn input;\n}\n\nfunction removeHash(input) {\n\tconst hashStart = input.indexOf('#');\n\tif (hashStart !== -1) {\n\t\tinput = input.slice(0, hashStart);\n\t}\n\n\treturn input;\n}\n\nfunction getHash(url) {\n\tlet hash = '';\n\tconst hashStart = url.indexOf('#');\n\tif (hashStart !== -1) {\n\t\thash = url.slice(hashStart);\n\t}\n\n\treturn hash;\n}\n\nfunction parseValue(value, options) {\n\tif (options.parseNumbers && !Number.isNaN(Number(value)) && (typeof value === 'string' && value.trim() !== '')) {\n\t\tvalue = Number(value);\n\t} else if (options.parseBooleans && value !== null && (value.toLowerCase() === 'true' || value.toLowerCase() === 'false')) {\n\t\tvalue = value.toLowerCase() === 'true';\n\t}\n\n\treturn value;\n}\n\nexport function extract(input) {\n\tinput = removeHash(input);\n\tconst queryStart = input.indexOf('?');\n\tif (queryStart === -1) {\n\t\treturn '';\n\t}\n\n\treturn input.slice(queryStart + 1);\n}\n\nexport function parse(query, options) {\n\toptions = {\n\t\tdecode: true,\n\t\tsort: true,\n\t\tarrayFormat: 'none',\n\t\tarrayFormatSeparator: ',',\n\t\tparseNumbers: false,\n\t\tparseBooleans: false,\n\t\t...options,\n\t};\n\n\tvalidateArrayFormatSeparator(options.arrayFormatSeparator);\n\n\tconst formatter = parserForArrayFormat(options);\n\n\t// Create an object with no prototype\n\tconst returnValue = Object.create(null);\n\n\tif (typeof query !== 'string') {\n\t\treturn returnValue;\n\t}\n\n\tquery = query.trim().replace(/^[?#&]/, '');\n\n\tif (!query) {\n\t\treturn returnValue;\n\t}\n\n\tfor (const parameter of query.split('&')) {\n\t\tif (parameter === '') {\n\t\t\tcontinue;\n\t\t}\n\n\t\tconst parameter_ = options.decode ? parameter.replace(/\\+/g, ' ') : parameter;\n\n\t\tlet [key, value] = splitOnFirst(parameter_, '=');\n\n\t\tif (key === undefined) {\n\t\t\tkey = parameter_;\n\t\t}\n\n\t\t// Missing `=` should be `null`:\n\t\t// http://w3.org/TR/2012/WD-url-20120524/#collect-url-parameters\n\t\tvalue = value === undefined ? null : (['comma', 'separator', 'bracket-separator'].includes(options.arrayFormat) ? value : decode(value, options));\n\t\tformatter(decode(key, options), value, returnValue);\n\t}\n\n\tfor (const [key, value] of Object.entries(returnValue)) {\n\t\tif (typeof value === 'object' && value !== null) {\n\t\t\tfor (const [key2, value2] of Object.entries(value)) {\n\t\t\t\tvalue[key2] = parseValue(value2, options);\n\t\t\t}\n\t\t} else {\n\t\t\treturnValue[key] = parseValue(value, options);\n\t\t}\n\t}\n\n\tif (options.sort === false) {\n\t\treturn returnValue;\n\t}\n\n\t// TODO: Remove the use of `reduce`.\n\t// eslint-disable-next-line unicorn/no-array-reduce\n\treturn (options.sort === true ? Object.keys(returnValue).sort() : Object.keys(returnValue).sort(options.sort)).reduce((result, key) => {\n\t\tconst value = returnValue[key];\n\t\tif (Boolean(value) && typeof value === 'object' && !Array.isArray(value)) {\n\t\t\t// Sort object keys, not values\n\t\t\tresult[key] = keysSorter(value);\n\t\t} else {\n\t\t\tresult[key] = value;\n\t\t}\n\n\t\treturn result;\n\t}, Object.create(null));\n}\n\nexport function stringify(object, options) {\n\tif (!object) {\n\t\treturn '';\n\t}\n\n\toptions = {encode: true,\n\t\tstrict: true,\n\t\tarrayFormat: 'none',\n\t\tarrayFormatSeparator: ',', ...options};\n\n\tvalidateArrayFormatSeparator(options.arrayFormatSeparator);\n\n\tconst shouldFilter = key => (\n\t\t(options.skipNull && isNullOrUndefined(object[key]))\n\t\t|| (options.skipEmptyString && object[key] === '')\n\t);\n\n\tconst formatter = encoderForArrayFormat(options);\n\n\tconst objectCopy = {};\n\n\tfor (const [key, value] of Object.entries(object)) {\n\t\tif (!shouldFilter(key)) {\n\t\t\tobjectCopy[key] = value;\n\t\t}\n\t}\n\n\tconst keys = Object.keys(objectCopy);\n\n\tif (options.sort !== false) {\n\t\tkeys.sort(options.sort);\n\t}\n\n\treturn keys.map(key => {\n\t\tconst value = object[key];\n\n\t\tif (value === undefined) {\n\t\t\treturn '';\n\t\t}\n\n\t\tif (value === null) {\n\t\t\treturn encode(key, options);\n\t\t}\n\n\t\tif (Array.isArray(value)) {\n\t\t\tif (value.length === 0 && options.arrayFormat === 'bracket-separator') {\n\t\t\t\treturn encode(key, options) + '[]';\n\t\t\t}\n\n\t\t\treturn value\n\t\t\t\t.reduce(formatter(key), [])\n\t\t\t\t.join('&');\n\t\t}\n\n\t\treturn encode(key, options) + '=' + encode(value, options);\n\t}).filter(x => x.length > 0).join('&');\n}\n\nexport function parseUrl(url, options) {\n\toptions = {\n\t\tdecode: true,\n\t\t...options,\n\t};\n\n\tlet [url_, hash] = splitOnFirst(url, '#');\n\n\tif (url_ === undefined) {\n\t\turl_ = url;\n\t}\n\n\treturn {\n\t\turl: url_?.split('?')?.[0] ?? '',\n\t\tquery: parse(extract(url), options),\n\t\t...(options && options.parseFragmentIdentifier && hash ? {fragmentIdentifier: decode(hash, options)} : {}),\n\t};\n}\n\nexport function stringifyUrl(object, options) {\n\toptions = {\n\t\tencode: true,\n\t\tstrict: true,\n\t\t[encodeFragmentIdentifier]: true,\n\t\t...options,\n\t};\n\n\tconst url = removeHash(object.url).split('?')[0] || '';\n\tconst queryFromUrl = extract(object.url);\n\n\tconst query = {\n\t\t...parse(queryFromUrl, {sort: false}),\n\t\t...object.query,\n\t};\n\n\tlet queryString = stringify(query, options);\n\tif (queryString) {\n\t\tqueryString = `?${queryString}`;\n\t}\n\n\tlet hash = getHash(object.url);\n\tif (object.fragmentIdentifier) {\n\t\tconst urlObjectForFragmentEncode = new URL(url);\n\t\turlObjectForFragmentEncode.hash = object.fragmentIdentifier;\n\t\thash = options[encodeFragmentIdentifier] ? urlObjectForFragmentEncode.hash : `#${object.fragmentIdentifier}`;\n\t}\n\n\treturn `${url}${queryString}${hash}`;\n}\n\nexport function pick(input, filter, options) {\n\toptions = {\n\t\tparseFragmentIdentifier: true,\n\t\t[encodeFragmentIdentifier]: false,\n\t\t...options,\n\t};\n\n\tconst {url, query, fragmentIdentifier} = parseUrl(input, options);\n\n\treturn stringifyUrl({\n\t\turl,\n\t\tquery: includeKeys(query, filter),\n\t\tfragmentIdentifier,\n\t}, options);\n}\n\nexport function exclude(input, filter, options) {\n\tconst exclusionFilter = Array.isArray(filter) ? key => !filter.includes(key) : (key, value) => !filter(key, value);\n\n\treturn pick(input, exclusionFilter, options);\n}\n","import * as queryString from './base.js';\n\nexport default queryString;\n"],"names":["_ref","placeholder","defaultValue","React","method","action","className","type","name","required","minLength","id","FontAwesomeIcon","icon","faMagnifyingGlass","sortByData","data","location","t","useTranslation","blogPostDataDesc","_data$blogPostDataDes","nodes","blogPostDataAsc","_data$blogPostDataAsc","blogPosts","setBlogPosts","sortAsc","setSortAsc","blogPostData","totalData","setTotalData","params","queryString","search","q","filterData","filter","_ref2","title","description","match","RegExp","length","window","replace","_ref3","Layout","H2","classes","keyword","BlogSearch","toLowerCase","faArrowUpWideShort","faArrowDownWideShort","onClick","map","_ref4","cover","coverAlt","slug","postedDate","key","BlogCard","Link","to","Helper","Head","Seo","token","singleMatcher","multiMatcher","decodeComponents","components","split","decodeURIComponent","join","left","slice","right","Array","prototype","concat","call","decode","input","tokens","i","decodeUriComponent","encodedURI","TypeError","replaceMap","exec","result","entries","Object","keys","customDecodeURIComponent","splitOnFirst","string","separator","separatorIndex","indexOf","includeKeys","object","predicate","isArray","descriptor","getOwnPropertyDescriptor","enumerable","defineProperty","Reflect","ownKeys","encodeFragmentIdentifier","Symbol","validateArrayFormatSeparator","value","encode","options","strict","encodeURIComponent","x","charCodeAt","toString","toUpperCase","keysSorter","sort","a","b","Number","removeHash","hashStart","parseValue","parseNumbers","isNaN","trim","parseBooleans","extract","queryStart","parse","query","arrayFormat","arrayFormatSeparator","formatter","accumulator","undefined","includes","isEncodedArray","newValue","item","test","arrayValue","flat","parserForArrayFormat","returnValue","create","parameter","parameter_","key2","value2","reduce","Boolean","stringify","shouldFilter","skipNull","skipEmptyString","index","keyValueSep","encoderForArrayFormat","objectCopy","parseUrl","url","url_","hash","parseFragmentIdentifier","fragmentIdentifier","stringifyUrl","getHash","urlObjectForFragmentEncode","URL","pick","exclude"],"sourceRoot":""}