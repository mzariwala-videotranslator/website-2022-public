{"version":3,"file":"component---src-pages-enterprise-index-tsx-53a4a8cf8f7a257bae18.js","mappings":"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","sources":["webpack://video-translator-ai/./src/components/Seo.tsx","webpack://video-translator-ai/./src/components/Typography.tsx","webpack://video-translator-ai/./src/components/EnterpriseBox.tsx","webpack://video-translator-ai/./src/components/EnterpriseSection.tsx","webpack://video-translator-ai/./src/pages/enterprise/index.tsx"],"sourcesContent":["import * as React from \"react\";\nimport { useStaticQuery, graphql, withPrefix } from \"gatsby\";\n\ninterface ISeo {\n  title?: string;\n  description?: string;\n  lang?: string;\n  keywords?: string;\n  url?: string;\n  image?: string;\n  children?: React.ReactNode;\n}\n\nconst formattedKeywords = (keywords: string): string => {\n  if (keywords.length > 3) {\n    if (keywords.includes(\",\")) {\n      return keywords\n        .split(\",\")\n        .map((item) => {\n          const itemClean = item.trim();\n          if (\n            (itemClean[0] === '\"' && itemClean[itemClean.length - 1] === '\"') ||\n            (itemClean[0] === \"'\" && itemClean[itemClean.length - 1] === \"'\")\n          ) {\n            return itemClean.substring(1, itemClean.length - 1);\n          }\n          return itemClean;\n        })\n        .join(\", \");\n    }\n    return keywords.split(/\\r?\\n/).join(\", \");\n  }\n  return keywords;\n};\n\nfunction Seo({\n  title,\n  description,\n  lang = \"en\",\n  keywords,\n  url,\n  image,\n  children,\n}: ISeo) {\n  const { site } = useStaticQuery(\n    graphql`\n      query {\n        site {\n          siteMetadata {\n            author\n            title\n            description\n            keywords\n            siteUrl\n          }\n        }\n      }\n    `\n  );\n\n  const metaDescription = description || site.siteMetadata.description;\n  const metaUrl = url\n    ? site.siteMetadata.siteUrl + url\n    : site.siteMetadata.siteUrl;\n  const metaImage = image\n    ? image\n    : site.siteMetadata.siteUrl + \"/img/android-chrome-512x512.png\";\n  const defaultTitle = title\n    ? `${title} | ${site.siteMetadata?.title}`\n    : `\n    ${site.siteMetadata?.title} | ${site.siteMetadata.description}`;\n  const metaKeywords = keywords\n    ? formattedKeywords(keywords)\n    : site.siteMetadata?.keywords;\n\n  return (\n    <>\n      <title>{defaultTitle}</title>\n      <meta name=\"description\" content={metaDescription} />\n      <meta name=\"keywords\" content={metaKeywords} />\n      <meta property=\"og:title\" content={defaultTitle} />\n      <meta property=\"og:description\" content={metaDescription} />\n      <meta property=\"og:type\" content=\"article\" />\n      <meta property=\"og:site_name\" content={site.siteMetadata?.title} />\n      <meta property=\"og:url\" content={metaUrl} />\n      <meta property=\"og:image\" content={metaImage} />\n      <meta name=\"twitter:card\" content=\"summary_large_image\" />\n      <meta\n        name=\"twitter:creator\"\n        content={site.siteMetadata?.author || \"@vidtranslatorai\"}\n      />\n      <meta name=\"twitter:title\" content={defaultTitle} />\n      <meta name=\"twitter:description\" content={metaDescription} />\n      <link\n        rel=\"icon\"\n        type=\"image/png\"\n        href={`${withPrefix(\"/\")}icon/icon-72x72.png`}\n        sizes=\"72x72\"\n      />\n      <link\n        rel=\"icon\"\n        type=\"image/png\"\n        href={`${withPrefix(\"/\")}icon/icon-128x128.png`}\n        sizes=\"128x128\"\n      />\n      <link\n        rel=\"icon\"\n        type=\"image/png\"\n        href={`${withPrefix(\"/\")}icon/icon-192x192.png`}\n        sizes=\"192x192\"\n      />\n      <link\n        rel=\"icon\"\n        type=\"image/png\"\n        href={`${withPrefix(\"/\")}icon/icon-512x512.png`}\n        sizes=\"512x512\"\n      />\n      <link\n        rel=\"manifest\"\n        href={`${withPrefix(\"/\")}icon/site.webmanifest`}\n        crossOrigin=\"use-credentials\"\n      />\n\n      <link\n        rel=\"mask-icon\"\n        href={`${withPrefix(\"/\")}icon/icon-192x192.png`}\n        color=\"#6f32b5\"\n      />\n      <meta name=\"msapplication-TileColor\" content=\"#6f32b5\" />\n      <meta name=\"theme-color\" content=\"#6f32b5\" />\n      <meta name=\"msvalidate.01\" content=\"5287DC75A6ADE54F95718CFF2CB651C4\" />\n      <link rel=\"dns-prefetch\" href=\"//www.gstatic.com\" />\n      <link rel=\"preconnect\" href=\"//www.gstatic.com\" crossOrigin=\"true\" />\n      <link rel=\"dns-prefetch\" href=\"//www.google.com\" />\n      <link rel=\"preconnect\" href=\"//www.google.com\" crossOrigin=\"true\" />\n      <meta\n        name=\"viewport\"\n        content=\"width=device-width, minimum-scale=1, initial-scale=1, maximum-scale=5\"\n      />\n      {children}\n    </>\n  );\n}\n\nexport default Seo;\n","import React from \"react\";\n\ninterface TypographyProps {\n  children: JSX.Element | JSX.Element[] | any;\n  classes?: string;\n}\n\nexport const H1 = ({ children, classes = \"\" }: TypographyProps) => {\n  return <div className={`hero-title fs-2 fw-bold ${classes}`}>{children}</div>;\n};\n\nexport const H2 = ({\n  children,\n  classes = \"\",\n  hasSeparator = false,\n}: TypographyProps & { hasSeparator?: boolean }) => {\n  return (\n    <div\n      className={`hero-title fs-3 fw-bold ${classes} ${\n        hasSeparator ? \"has-separator\" : \"\"\n      }`}\n    >\n      {children}\n    </div>\n  );\n};\n\nexport const BodyText = ({ children, classes = \"\" }: TypographyProps) => {\n  return <p className={`fs-5 fw-light ${classes}`}>{children}</p>;\n};\n\nexport const BodyContentText = ({\n  children,\n  classes = \"\",\n}: TypographyProps) => {\n  return <p className={`fw-light ${classes}`}>{children}</p>;\n};\n","import React from \"react\";\nimport { withPrefix } from \"gatsby\";\nimport { Link } from \"gatsby-plugin-react-i18next\";\n\nconst Card = ({ bg, title, icon }: any) => (\n  <div className=\"enterprise-box rounded-2 shadow text-center p-5 d-flex flex-column align-items-center justify-content-center\">\n    <img\n      src={withPrefix(bg)}\n      alt={`bg-${title}`}\n      className=\"enterprise-box-bg\"\n    />\n    <div className=\"enterprise-box-content d-flex flex-column align-items-center gap-2\">\n      <img\n        src={withPrefix(icon)}\n        alt={title}\n        width={80}\n        height={80}\n        loading=\"lazy\"\n      />\n      <span className=\"fs-5 fw-bold\">{title}</span>\n    </div>\n  </div>\n);\n\nconst EnterpriseBox = (item: any) => {\n  if (!item.link) {\n    return <Card {...item} />;\n  }\n\n  return (\n    <Link to={item.link} className=\"text-decoration-none\">\n      <Card {...item} />\n    </Link>\n  );\n};\n\nexport default EnterpriseBox;\n","import React from \"react\";\nimport { Trans, useTranslation } from \"gatsby-plugin-react-i18next\";\n\nimport EnterpriseBox from \"./EnterpriseBox\";\nimport { H2 } from \"./Typography\";\n\nconst EnterpriseSection = () => {\n  const { t } = useTranslation();\n  const data = [\n    {\n      id: 1,\n      title: t(\"enterpriseSafety\"),\n      icon: \"images/safety.png\",\n      link: \"/enterprise/safety\",\n      bg: \"images/safety-bg-sm.webp\",\n    },\n    {\n      id: 2,\n      title: t(\"enterpriseEducation\"),\n      icon: \"images/education.png\",\n      link: \"/enterprise/education\",\n      bg: \"images/education-bg-sm.webp\",\n    },\n    {\n      id: 3,\n      title: t(\"enterpriseAI Agency\"),\n      icon: \"images/ai.png\",\n      link: null,\n      bg: \"images/custom-bg-sm.webp\",\n    },\n    {\n      id: 4,\n      title: t(\"enterpriseHealthcare\"),\n      icon: \"images/doctors-bag.png\",\n      link: \"/enterprise/healthcare\",\n      bg: \"images/healthcare-bg-sm.webp\",\n    },\n  ];\n\n  return (\n    <div className=\"section-sm bg-brand-light\">\n      <div className=\"container\">\n        <H2 classes=\"text-gray text-center\" hasSeparator>\n          <Trans i18nKey=\"enterpriseSectionTitle\" components={[<br />]} />\n        </H2>\n        <div className=\"mt-5\">\n          <div className=\"row\">\n            {data &&\n              data.map((item: any) => (\n                <div\n                  key={`enterprise-${item?.id}`}\n                  className=\"col-12 col-md-6 mb-4\"\n                >\n                  <EnterpriseBox {...item} />\n                </div>\n              ))}\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default EnterpriseSection;\n","import * as React from \"react\";\nimport { graphql } from \"gatsby\";\nimport type { HeadFC, PageProps } from \"gatsby\";\n\nimport Layout from \"../../components/Layout\";\nimport Helper from \"../../components/Helper\";\nimport Seo from \"../../components/Seo\";\nimport EnterpriseSection from \"../../components/EnterpriseSection\";\n\nconst EnterprisePage: React.FC<PageProps> = () => {\n  return (\n    <Layout>\n      <EnterpriseSection />\n      <Helper isHome />\n    </Layout>\n  );\n};\n\nexport default EnterprisePage;\n\nexport const query = graphql`\n  query ($language: String!) {\n    locales: allLocale(\n      filter: { ns: { in: [\"index\"] }, language: { eq: $language } }\n    ) {\n      edges {\n        node {\n          ns\n          data\n          language\n        }\n      }\n    }\n    site {\n      siteMetadata {\n        title\n        siteUrl\n        description\n        keywords\n      }\n    }\n  }\n`;\n\nexport const Head: HeadFC = () => <Seo title=\"Enterprise\" />;\n"],"names":["title","description","lang","keywords","url","image","children","site","useStaticQuery","metaDescription","siteMetadata","metaUrl","siteUrl","metaImage","defaultTitle","_site$siteMetadata","_site$siteMetadata2","metaKeywords","length","includes","split","map","item","itemClean","trim","substring","join","formattedKeywords","_site$siteMetadata3","React","name","content","property","_site$siteMetadata4","_site$siteMetadata5","author","rel","type","href","withPrefix","sizes","crossOrigin","color","H1","_ref","classes","className","H2","_ref2","hasSeparator","BodyText","_ref3","BodyContentText","_ref4","Card","bg","icon","src","alt","width","height","loading","link","Link","to","EnterpriseSection","t","useTranslation","data","id","Trans","i18nKey","components","key","EnterpriseBox","EnterprisePage","Layout","Helper","isHome","Head","Seo"],"sourceRoot":""}