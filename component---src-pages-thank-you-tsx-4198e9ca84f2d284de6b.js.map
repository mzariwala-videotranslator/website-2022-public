{"version":3,"file":"component---src-pages-thank-you-tsx-4198e9ca84f2d284de6b.js","mappings":"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","sources":["webpack://video-translator-ai/./src/components/EmptyState.tsx","webpack://video-translator-ai/./src/components/Seo.tsx","webpack://video-translator-ai/./src/pages/thank-you.tsx"],"sourcesContent":["import React from \"react\";\nimport { Link, useTranslation } from \"gatsby-plugin-react-i18next\";\n\nconst EmptyState = ({ title = \"\", subtitle = \"\" }: any) => {\n  const { t } = useTranslation();\n\n  return (\n    <div className=\"container text-center\">\n      <div className=\"d-flex flex-column align-items-center justify-content-center gap-3 min-h-page\">\n        <span className=\"text-404 fw-bold\">{!title ? \"404\" : title}</span>\n        <span className=\"fs-4\">{!subtitle ? t(\"oops\") : subtitle}</span>\n        <Link to=\"/\">\n          <button className=\"btn btn-link\" type=\"button\">\n            {t(\"backToHomepage\")}\n          </button>\n        </Link>\n      </div>\n    </div>\n  );\n};\n\nexport default EmptyState;\n","import * as React from \"react\";\nimport { useStaticQuery, graphql, withPrefix } from \"gatsby\";\n\ninterface ISeo {\n  title?: string;\n  description?: string;\n  lang?: string;\n  keywords?: string;\n  url?: string;\n  image?: string;\n  children?: React.ReactNode;\n}\n\nconst formattedKeywords = (keywords: string): string => {\n  if (keywords.length > 3) {\n    if (keywords.includes(\",\")) {\n      return keywords\n        .split(\",\")\n        .map((item) => {\n          const itemClean = item.trim();\n          if (\n            (itemClean[0] === '\"' && itemClean[itemClean.length - 1] === '\"') ||\n            (itemClean[0] === \"'\" && itemClean[itemClean.length - 1] === \"'\")\n          ) {\n            return itemClean.substring(1, itemClean.length - 1);\n          }\n          return itemClean;\n        })\n        .join(\", \");\n    }\n    return keywords.split(/\\r?\\n/).join(\", \");\n  }\n  return keywords;\n};\n\nfunction Seo({\n  title,\n  description,\n  lang = \"en\",\n  keywords,\n  url,\n  image,\n  children,\n}: ISeo) {\n  const { site } = useStaticQuery(\n    graphql`\n      query {\n        site {\n          siteMetadata {\n            author\n            title\n            description\n            keywords\n            siteUrl\n          }\n        }\n      }\n    `\n  );\n\n  const metaDescription = description || site.siteMetadata.description;\n  const metaUrl = url\n    ? site.siteMetadata.siteUrl + url\n    : site.siteMetadata.siteUrl;\n  const metaImage = image\n    ? image\n    : site.siteMetadata.siteUrl + \"/img/android-chrome-512x512.png\";\n  const defaultTitle = title\n    ? `${title} | ${site.siteMetadata?.title}`\n    : `\n    ${site.siteMetadata?.title} | ${site.siteMetadata.description}`;\n  const metaKeywords = keywords\n    ? formattedKeywords(keywords)\n    : site.siteMetadata?.keywords;\n\n  return (\n    <>\n      <title>{defaultTitle}</title>\n      <meta name=\"description\" content={metaDescription} />\n      <meta name=\"keywords\" content={metaKeywords} />\n      <meta property=\"og:title\" content={defaultTitle} />\n      <meta property=\"og:description\" content={metaDescription} />\n      <meta property=\"og:type\" content=\"article\" />\n      <meta property=\"og:site_name\" content={site.siteMetadata?.title} />\n      <meta property=\"og:url\" content={metaUrl} />\n      <meta property=\"og:image\" content={metaImage} />\n      <meta name=\"twitter:card\" content=\"summary_large_image\" />\n      <meta\n        name=\"twitter:creator\"\n        content={site.siteMetadata?.author || \"@vidtranslatorai\"}\n      />\n      <meta name=\"twitter:title\" content={defaultTitle} />\n      <meta name=\"twitter:description\" content={metaDescription} />\n      <link\n        rel=\"icon\"\n        type=\"image/png\"\n        href={`${withPrefix(\"/\")}icon/icon-72x72.png`}\n        sizes=\"72x72\"\n      />\n      <link\n        rel=\"icon\"\n        type=\"image/png\"\n        href={`${withPrefix(\"/\")}icon/icon-128x128.png`}\n        sizes=\"128x128\"\n      />\n      <link\n        rel=\"icon\"\n        type=\"image/png\"\n        href={`${withPrefix(\"/\")}icon/icon-192x192.png`}\n        sizes=\"192x192\"\n      />\n      <link\n        rel=\"icon\"\n        type=\"image/png\"\n        href={`${withPrefix(\"/\")}icon/icon-512x512.png`}\n        sizes=\"512x512\"\n      />\n      <link\n        rel=\"manifest\"\n        href={`${withPrefix(\"/\")}icon/site.webmanifest`}\n        crossOrigin=\"use-credentials\"\n      />\n\n      <link\n        rel=\"mask-icon\"\n        href={`${withPrefix(\"/\")}icon/icon-192x192.png`}\n        color=\"#6f32b5\"\n      />\n      <meta name=\"msapplication-TileColor\" content=\"#6f32b5\" />\n      <meta name=\"theme-color\" content=\"#6f32b5\" />\n      <meta name=\"msvalidate.01\" content=\"5287DC75A6ADE54F95718CFF2CB651C4\" />\n      <link rel=\"dns-prefetch\" href=\"//www.gstatic.com\" />\n      <link rel=\"preconnect\" href=\"//www.gstatic.com\" crossOrigin=\"true\" />\n      <link rel=\"dns-prefetch\" href=\"//www.google.com\" />\n      <link rel=\"preconnect\" href=\"//www.google.com\" crossOrigin=\"true\" />\n      <meta\n        name=\"viewport\"\n        content=\"width=device-width, minimum-scale=1, initial-scale=1, maximum-scale=5\"\n      />\n      {children}\n    </>\n  );\n}\n\nexport default Seo;\n","import * as React from \"react\";\nimport { graphql } from \"gatsby\";\nimport type { HeadFC, PageProps } from \"gatsby\";\nimport { useTranslation } from \"gatsby-plugin-react-i18next\";\n\nimport EmptyState from \"../components/EmptyState\";\nimport Layout from \"../components/Layout\";\nimport Helper from \"../components/Helper\";\nimport Seo from \"../components/Seo\";\n\nconst ThankYouPage: React.FC<PageProps> = () => {\n  const { t } = useTranslation();\n  return (\n    <Layout>\n      <div className=\"my-5\">\n        <EmptyState\n          title={t(\"thankYouTitle\")}\n          subtitle={t(\"thankYouSubtitle\")}\n        />\n      </div>\n      <Helper />\n    </Layout>\n  );\n};\n\nexport default ThankYouPage;\n\nexport const query = graphql`\n  query ($language: String!) {\n    locales: allLocale(\n      filter: { ns: { in: [\"index\"] }, language: { eq: $language } }\n    ) {\n      edges {\n        node {\n          ns\n          data\n          language\n        }\n      }\n    }\n  }\n`;\n\nexport const Head: HeadFC = () => <Seo title=\"Thank you\" />;\n"],"names":["_ref","title","subtitle","t","useTranslation","React","className","Link","to","type","description","lang","keywords","url","image","children","site","useStaticQuery","metaDescription","siteMetadata","metaUrl","siteUrl","metaImage","defaultTitle","_site$siteMetadata","_site$siteMetadata2","metaKeywords","length","includes","split","map","item","itemClean","trim","substring","join","formattedKeywords","_site$siteMetadata3","name","content","property","_site$siteMetadata4","_site$siteMetadata5","author","rel","href","withPrefix","sizes","crossOrigin","color","ThankYouPage","Layout","EmptyState","Helper","Head","Seo"],"sourceRoot":""}