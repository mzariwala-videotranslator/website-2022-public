{"version":3,"file":"component---src-pages-blog-tsx-1e276368d1dcda53bb6b.js","mappings":"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","sources":["webpack://video-translator-ai/./src/components/BlogSearch.tsx","webpack://video-translator-ai/./src/components/EditorPick.tsx","webpack://video-translator-ai/./src/pages/blog.tsx","webpack://video-translator-ai/./src/utils/pagination.ts","webpack://video-translator-ai/./node_modules/query-string/node_modules/decode-uri-component/index.js","webpack://video-translator-ai/./node_modules/split-on-first/index.js","webpack://video-translator-ai/./node_modules/filter-obj/index.js","webpack://video-translator-ai/./node_modules/query-string/base.js","webpack://video-translator-ai/./node_modules/query-string/index.js"],"sourcesContent":["import React from \"react\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faMagnifyingGlass } from \"@fortawesome/free-solid-svg-icons\";\n\ninterface IBlogSearch {\n  placeholder?: string;\n  defaultValue?: any;\n}\n\nconst BlogSearch = ({ placeholder, defaultValue }: IBlogSearch) => {\n  return (\n    <form\n      method=\"GET\"\n      action=\"/search\"\n      className=\"input-search-language input-group\"\n    >\n      <input\n        type=\"text\"\n        name=\"q\"\n        defaultValue={defaultValue}\n        className=\"form-control\"\n        placeholder={placeholder}\n        aria-label={placeholder}\n        aria-describedby=\"button-find-blog\"\n        required\n        minLength={3}\n      />\n      <button className=\"btn btn-primary\" type=\"submit\" id=\"button-find-blog\">\n        <FontAwesomeIcon icon={faMagnifyingGlass} />\n      </button>\n    </form>\n  );\n};\n\nexport default BlogSearch;\n","import React from \"react\";\nimport { GatsbyImage, getImage } from \"gatsby-plugin-image\";\nimport { Link } from \"gatsby-plugin-react-i18next\";\n\ninterface IEditorPick {\n  title: string;\n  slug: string;\n  description: string;\n  cover?: any;\n  coverAlt: string;\n  postedDate: string;\n}\n\nconst EditorPick = ({\n  title,\n  slug,\n  description,\n  cover,\n  coverAlt,\n  postedDate,\n}: IEditorPick) => {\n  const image = getImage(cover?.localFile);\n  return (\n    <div className=\"blog-card editors-pick\">\n      <Link className=\"pb-3\" to={`/blog/${slug}`}>\n        <div className=\"d-flex flex-column flex-lg-row align-items-center rounded-2 shadow\">\n          <div className=\"rounded-2 overflow-hidden\">\n            {/* @ts-ignore */}\n            <GatsbyImage image={image} alt={coverAlt} />\n          </div>\n          <div className=\"blog-card-text px-3 px-lg-5 pt-3\">\n            <span className=\"badge fw-semibold bg-secondary\">\n              Editor's pick\n            </span>\n            <div className=\"fs-4 fw-bold fs-5 pb-2 lh-md\">{title}</div>\n            <p>{description}</p>\n            <span className=\"blog-card-date\">{postedDate}</span>\n          </div>\n        </div>\n      </Link>\n    </div>\n  );\n};\n\nexport default EditorPick;\n","import * as React from \"react\";\nimport type { HeadFC, PageProps } from \"gatsby\";\nimport { graphql } from \"gatsby\";\nimport { useI18next, useTranslation } from \"gatsby-plugin-react-i18next\";\nimport queryString from \"query-string\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport {\n  faArrowDownWideShort,\n  faArrowUpWideShort,\n  faChevronLeft,\n  faChevronRight,\n} from \"@fortawesome/free-solid-svg-icons\";\n\nimport BlogCard from \"../components/BlogCard\";\nimport BlogSearch from \"../components/BlogSearch\";\nimport EditorPick from \"../components/EditorPick\";\nimport Layout from \"../components/Layout\";\nimport Helper from \"../components/Helper\";\nimport Seo from \"../components/Seo\";\nimport { H1 } from \"../components/Typography\";\nimport pagination from \"../utils/pagination\";\n\nconst sortByData = [\"Newer to older\", \"Older to newer\"];\n\nconst BlogPage: React.FC<PageProps> = ({ data, location }: any) => {\n  const { t } = useTranslation();\n  const { language } = useI18next();\n  const blogPostDataDesc = data?.blogPostDataDesc?.nodes;\n  const blogPostDataAsc = data?.blogPostDataAsc?.nodes;\n  const postPerLoad = 12;\n  const editorPick = data?.editorPicks?.nodes;\n  const [blogPosts, setBlogPosts] = React.useState([]);\n  const [activePage, setActivePage] = React.useState(0);\n  const [sortAsc, setSortAsc] = React.useState(false);\n  const [totalPage, setTotalPage] = React.useState(1);\n  const [numPage, setNumPage] = React.useState([]);\n  const blogPostData = sortAsc ? blogPostDataAsc : blogPostDataDesc;\n  const { page, sort } = queryString.parse(location.search);\n\n  React.useEffect(() => {\n    if (!page) {\n      setActivePage(1);\n    } else {\n      setActivePage(parseInt(page.toString()));\n    }\n\n    if (!sort) {\n      setSortAsc(false);\n    } else {\n      setSortAsc(sort === \"asc\");\n    }\n  }, []);\n\n  React.useEffect(() => {\n    if (activePage > 0) {\n      setActivePage(1);\n      setSortAsc(false);\n    }\n  }, [language]);\n\n  React.useEffect(() => {\n    if (activePage > 0) {\n      generatePosts();\n    }\n  }, [activePage]);\n\n  React.useEffect(() => {\n    if (activePage > 0) {\n      if (blogPosts.length === 0) {\n        generatePosts();\n      }\n    }\n  }, [JSON.stringify(blogPosts)]);\n\n  const generatePosts = () => {\n    const indexStart = (activePage - 1) * postPerLoad;\n    const indexEnd = activePage * postPerLoad;\n    const filterByLang = blogPostData.filter(\n      ({ strapi_id }: any) => strapi_id !== editorPick[0]?.strapi_id\n    );\n    const filterByLimit = filterByLang.slice(indexStart, indexEnd);\n    const total = Math.ceil(filterByLang.length / postPerLoad);\n    // @ts-ignore\n    setBlogPosts(filterByLimit);\n    setTotalPage(total);\n    setNumPage(pagination(activePage, total));\n  };\n\n  const generateQueryString = (page: number, isAsc: boolean) =>\n    `?page=${page}&sort=${isAsc ? \"asc\" : \"desc\"}`;\n\n  return (\n    <Layout>\n      <div className=\"container my-5 min-h-page\">\n        <H1 classes={`mb-3 text-left`}>{t(\"vtaiBlog\")}</H1>\n        <div className=\"custom-page-content fw-light lh-lg py-3\">\n          {activePage === 1 && (\n            <div className=\"row mb-5\">\n              <EditorPick\n                cover={editorPick[0]?.cover}\n                coverAlt={editorPick[0]?.coverAlt}\n                title={editorPick[0]?.title}\n                slug={editorPick[0]?.slug}\n                description={editorPick[0]?.description}\n                postedDate={editorPick[0]?.postedDate}\n              />\n            </div>\n          )}\n          <div className=\"row\">\n            <div className=\"d-flex justify-content-between pb-3\">\n              <BlogSearch placeholder={t(\"typeHere\") || \"\"} />\n              <div className=\"dropdown text-end\">\n                <button\n                  type=\"button\"\n                  className=\"d-flex align-items-center btn btn-outline-primary dropdown-toggle\"\n                  data-bs-toggle=\"dropdown\"\n                  aria-expanded=\"false\"\n                  data-bs-offset=\"10,20\"\n                >\n                  <span className=\"d-none d-md-block\">\n                    Sort by{\" \"}\n                    {!sortAsc\n                      ? sortByData[0].toLowerCase()\n                      : sortByData[1].toLowerCase()}\n                  </span>\n                  <span className=\"d-block d-md-none\">\n                    {\" \"}\n                    {!sortAsc ? (\n                      <FontAwesomeIcon icon={faArrowDownWideShort} />\n                    ) : (\n                      <FontAwesomeIcon icon={faArrowUpWideShort} />\n                    )}\n                  </span>\n                </button>\n                <ul className=\"dropdown-menu\">\n                  <li>\n                    <button\n                      className={`dropdown-item ${sortAsc ? \"\" : \"active\"}`}\n                      onClick={() => {\n                        setSortAsc(false);\n                        window.location.href = \"?sort=desc\";\n                      }}\n                    >\n                      {sortByData[0]}\n                    </button>\n                  </li>\n                  <li>\n                    <button\n                      className={`dropdown-item ${sortAsc ? \"active\" : \"\"}`}\n                      onClick={() => {\n                        setSortAsc(true);\n                        window.location.href = \"?sort=asc\";\n                      }}\n                    >\n                      {sortByData[1]}\n                    </button>\n                  </li>\n                </ul>\n              </div>\n            </div>\n            {blogPosts &&\n              blogPosts.map(\n                ({\n                  id,\n                  cover,\n                  coverAlt,\n                  title,\n                  slug,\n                  description,\n                  postedDate,\n                }: any) => (\n                  <div\n                    key={`post-${id}`}\n                    className=\"col-12 col-md-6 col-lg-4 mb-4\"\n                  >\n                    <BlogCard\n                      cover={cover}\n                      coverAlt={coverAlt}\n                      title={title}\n                      slug={slug}\n                      description={description}\n                      postedDate={postedDate}\n                    />\n                  </div>\n                )\n              )}\n          </div>\n        </div>\n        {totalPage > 1 && blogPosts.length > 0 && (\n          <nav aria-label=\"Blog pagination\" className=\"my-5\">\n            <ul className=\"pagination justify-content-center\">\n              <li className={`page-item ${activePage === 1 ? \"disabled\" : \"\"}`}>\n                <a\n                  className=\"page-link\"\n                  href={generateQueryString(activePage - 1, sortAsc)}\n                  aria-label=\"Previous\"\n                >\n                  <span aria-hidden=\"true\">\n                    <FontAwesomeIcon icon={faChevronLeft} />\n                  </span>\n                </a>\n              </li>\n              {numPage.map((x, i) => (\n                <li\n                  key={`page-${x}`}\n                  className={`page-item ${activePage === x ? \"active\" : \"\"}`}\n                >\n                  {x !== \"...\" ? (\n                    <a\n                      className=\"page-link\"\n                      href={generateQueryString(x, sortAsc)}\n                    >\n                      {x}\n                    </a>\n                  ) : (\n                    <span className=\"page-link\">{x}</span>\n                  )}\n                </li>\n              ))}\n              <li\n                className={`page-item ${\n                  activePage === totalPage ? \"disabled\" : \"\"\n                }`}\n              >\n                <a\n                  className=\"page-link\"\n                  href={generateQueryString(activePage + 1, sortAsc)}\n                  aria-label=\"Previous\"\n                >\n                  <span aria-hidden=\"true\">\n                    <FontAwesomeIcon icon={faChevronRight} />\n                  </span>\n                </a>\n              </li>\n            </ul>\n          </nav>\n        )}\n      </div>\n      <Helper />\n    </Layout>\n  );\n};\n\nexport default BlogPage;\n\nexport const query = graphql`\n  query ($language: String!) {\n    locales: allLocale(\n      filter: { ns: { in: [\"index\", \"blog\"] }, language: { eq: $language } }\n    ) {\n      edges {\n        node {\n          ns\n          data\n          language\n        }\n      }\n    }\n    editorPicks: allStrapiBlog(\n      filter: { locale: { eq: $language } }\n      limit: 1\n      sort: { postedDate: DESC }\n    ) {\n      nodes {\n        id\n        strapi_id\n        title\n        slug\n        description\n        cover {\n          localFile {\n            childImageSharp {\n              gatsbyImageData\n            }\n          }\n        }\n        coverAlt\n        postedDate(formatString: \"MMM DD, YYYY\")\n      }\n    }\n    blogPostDataDesc: allStrapiBlog(\n      filter: { locale: { eq: $language } }\n      sort: { postedDate: DESC }\n      limit: 1000\n    ) {\n      nodes {\n        id\n        strapi_id\n        title\n        slug\n        description\n        cover {\n          localFile {\n            childImageSharp {\n              gatsbyImageData\n            }\n          }\n        }\n        coverAlt\n        postedDate(formatString: \"MMM DD, YYYY\")\n        blogCategories {\n          categoryName\n        }\n      }\n    }\n    blogPostDataAsc: allStrapiBlog(\n      filter: { locale: { eq: $language } }\n      sort: { postedDate: ASC }\n      limit: 1000\n    ) {\n      nodes {\n        id\n        strapi_id\n        title\n        slug\n        description\n        cover {\n          localFile {\n            childImageSharp {\n              gatsbyImageData\n            }\n          }\n        }\n        coverAlt\n        postedDate(formatString: \"MMM DD, YYYY\")\n        blogCategories {\n          categoryName\n        }\n      }\n    }\n  }\n`;\n\nexport const Head: HeadFC = () => <Seo title=\"Blog\" />;\n","const pagination = (c: number, m: number): any => {\n  var current = c,\n    last = m,\n    delta = 2,\n    left = current - delta,\n    right = current + delta + 1,\n    range = [],\n    rangeWithDots = [],\n    l;\n\n  for (let i = 1; i <= last; i++) {\n    if (i == 1 || i == last || (i >= left && i < right)) {\n      range.push(i);\n    }\n  }\n\n  for (let i of range) {\n    if (l) {\n      if (i - l === 2) {\n        rangeWithDots.push(l + 1);\n      } else if (i - l !== 1) {\n        rangeWithDots.push(\"...\");\n      }\n    }\n    rangeWithDots.push(i);\n    l = i;\n  }\n\n  return rangeWithDots;\n};\n\nexport default pagination;\n","const token = '%[a-f0-9]{2}';\nconst singleMatcher = new RegExp('(' + token + ')|([^%]+?)', 'gi');\nconst multiMatcher = new RegExp('(' + token + ')+', 'gi');\n\nfunction decodeComponents(components, split) {\n\ttry {\n\t\t// Try to decode the entire string first\n\t\treturn [decodeURIComponent(components.join(''))];\n\t} catch {\n\t\t// Do nothing\n\t}\n\n\tif (components.length === 1) {\n\t\treturn components;\n\t}\n\n\tsplit = split || 1;\n\n\t// Split the array in 2 parts\n\tconst left = components.slice(0, split);\n\tconst right = components.slice(split);\n\n\treturn Array.prototype.concat.call([], decodeComponents(left), decodeComponents(right));\n}\n\nfunction decode(input) {\n\ttry {\n\t\treturn decodeURIComponent(input);\n\t} catch {\n\t\tlet tokens = input.match(singleMatcher) || [];\n\n\t\tfor (let i = 1; i < tokens.length; i++) {\n\t\t\tinput = decodeComponents(tokens, i).join('');\n\n\t\t\ttokens = input.match(singleMatcher) || [];\n\t\t}\n\n\t\treturn input;\n\t}\n}\n\nfunction customDecodeURIComponent(input) {\n\t// Keep track of all the replacements and prefill the map with the `BOM`\n\tconst replaceMap = {\n\t\t'%FE%FF': '\\uFFFD\\uFFFD',\n\t\t'%FF%FE': '\\uFFFD\\uFFFD',\n\t};\n\n\tlet match = multiMatcher.exec(input);\n\twhile (match) {\n\t\ttry {\n\t\t\t// Decode as big chunks as possible\n\t\t\treplaceMap[match[0]] = decodeURIComponent(match[0]);\n\t\t} catch {\n\t\t\tconst result = decode(match[0]);\n\n\t\t\tif (result !== match[0]) {\n\t\t\t\treplaceMap[match[0]] = result;\n\t\t\t}\n\t\t}\n\n\t\tmatch = multiMatcher.exec(input);\n\t}\n\n\t// Add `%C2` at the end of the map to make sure it does not replace the combinator before everything else\n\treplaceMap['%C2'] = '\\uFFFD';\n\n\tconst entries = Object.keys(replaceMap);\n\n\tfor (const key of entries) {\n\t\t// Replace all decoded components\n\t\tinput = input.replace(new RegExp(key, 'g'), replaceMap[key]);\n\t}\n\n\treturn input;\n}\n\nexport default function decodeUriComponent(encodedURI) {\n\tif (typeof encodedURI !== 'string') {\n\t\tthrow new TypeError('Expected `encodedURI` to be of type `string`, got `' + typeof encodedURI + '`');\n\t}\n\n\ttry {\n\t\t// Try the built in decoder first\n\t\treturn decodeURIComponent(encodedURI);\n\t} catch {\n\t\t// Fallback to a more advanced decoder\n\t\treturn customDecodeURIComponent(encodedURI);\n\t}\n}\n","export default function splitOnFirst(string, separator) {\n\tif (!(typeof string === 'string' && typeof separator === 'string')) {\n\t\tthrow new TypeError('Expected the arguments to be of type `string`');\n\t}\n\n\tif (string === '' || separator === '') {\n\t\treturn [];\n\t}\n\n\tconst separatorIndex = string.indexOf(separator);\n\n\tif (separatorIndex === -1) {\n\t\treturn [];\n\t}\n\n\treturn [\n\t\tstring.slice(0, separatorIndex),\n\t\tstring.slice(separatorIndex + separator.length)\n\t];\n}\n","export function includeKeys(object, predicate) {\n\tconst result = {};\n\n\tif (Array.isArray(predicate)) {\n\t\tfor (const key of predicate) {\n\t\t\tconst descriptor = Object.getOwnPropertyDescriptor(object, key);\n\t\t\tif (descriptor?.enumerable) {\n\t\t\t\tObject.defineProperty(result, key, descriptor);\n\t\t\t}\n\t\t}\n\t} else {\n\t\t// `Reflect.ownKeys()` is required to retrieve symbol properties\n\t\tfor (const key of Reflect.ownKeys(object)) {\n\t\t\tconst descriptor = Object.getOwnPropertyDescriptor(object, key);\n\t\t\tif (descriptor.enumerable) {\n\t\t\t\tconst value = object[key];\n\t\t\t\tif (predicate(key, value, object)) {\n\t\t\t\t\tObject.defineProperty(result, key, descriptor);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\treturn result;\n}\n\nexport function excludeKeys(object, predicate) {\n\tif (Array.isArray(predicate)) {\n\t\tconst set = new Set(predicate);\n\t\treturn includeKeys(object, key => !set.has(key));\n\t}\n\n\treturn includeKeys(object, (key, value, object) => !predicate(key, value, object));\n}\n","import decodeComponent from 'decode-uri-component';\nimport splitOnFirst from 'split-on-first';\nimport {includeKeys} from 'filter-obj';\n\nconst isNullOrUndefined = value => value === null || value === undefined;\n\n// eslint-disable-next-line unicorn/prefer-code-point\nconst strictUriEncode = string => encodeURIComponent(string).replace(/[!'()*]/g, x => `%${x.charCodeAt(0).toString(16).toUpperCase()}`);\n\nconst encodeFragmentIdentifier = Symbol('encodeFragmentIdentifier');\n\nfunction encoderForArrayFormat(options) {\n\tswitch (options.arrayFormat) {\n\t\tcase 'index': {\n\t\t\treturn key => (result, value) => {\n\t\t\t\tconst index = result.length;\n\n\t\t\t\tif (\n\t\t\t\t\tvalue === undefined\n\t\t\t\t\t|| (options.skipNull && value === null)\n\t\t\t\t\t|| (options.skipEmptyString && value === '')\n\t\t\t\t) {\n\t\t\t\t\treturn result;\n\t\t\t\t}\n\n\t\t\t\tif (value === null) {\n\t\t\t\t\treturn [\n\t\t\t\t\t\t...result, [encode(key, options), '[', index, ']'].join(''),\n\t\t\t\t\t];\n\t\t\t\t}\n\n\t\t\t\treturn [\n\t\t\t\t\t...result,\n\t\t\t\t\t[encode(key, options), '[', encode(index, options), ']=', encode(value, options)].join(''),\n\t\t\t\t];\n\t\t\t};\n\t\t}\n\n\t\tcase 'bracket': {\n\t\t\treturn key => (result, value) => {\n\t\t\t\tif (\n\t\t\t\t\tvalue === undefined\n\t\t\t\t\t|| (options.skipNull && value === null)\n\t\t\t\t\t|| (options.skipEmptyString && value === '')\n\t\t\t\t) {\n\t\t\t\t\treturn result;\n\t\t\t\t}\n\n\t\t\t\tif (value === null) {\n\t\t\t\t\treturn [\n\t\t\t\t\t\t...result,\n\t\t\t\t\t\t[encode(key, options), '[]'].join(''),\n\t\t\t\t\t];\n\t\t\t\t}\n\n\t\t\t\treturn [\n\t\t\t\t\t...result,\n\t\t\t\t\t[encode(key, options), '[]=', encode(value, options)].join(''),\n\t\t\t\t];\n\t\t\t};\n\t\t}\n\n\t\tcase 'colon-list-separator': {\n\t\t\treturn key => (result, value) => {\n\t\t\t\tif (\n\t\t\t\t\tvalue === undefined\n\t\t\t\t\t|| (options.skipNull && value === null)\n\t\t\t\t\t|| (options.skipEmptyString && value === '')\n\t\t\t\t) {\n\t\t\t\t\treturn result;\n\t\t\t\t}\n\n\t\t\t\tif (value === null) {\n\t\t\t\t\treturn [\n\t\t\t\t\t\t...result,\n\t\t\t\t\t\t[encode(key, options), ':list='].join(''),\n\t\t\t\t\t];\n\t\t\t\t}\n\n\t\t\t\treturn [\n\t\t\t\t\t...result,\n\t\t\t\t\t[encode(key, options), ':list=', encode(value, options)].join(''),\n\t\t\t\t];\n\t\t\t};\n\t\t}\n\n\t\tcase 'comma':\n\t\tcase 'separator':\n\t\tcase 'bracket-separator': {\n\t\t\tconst keyValueSep = options.arrayFormat === 'bracket-separator'\n\t\t\t\t? '[]='\n\t\t\t\t: '=';\n\n\t\t\treturn key => (result, value) => {\n\t\t\t\tif (\n\t\t\t\t\tvalue === undefined\n\t\t\t\t\t|| (options.skipNull && value === null)\n\t\t\t\t\t|| (options.skipEmptyString && value === '')\n\t\t\t\t) {\n\t\t\t\t\treturn result;\n\t\t\t\t}\n\n\t\t\t\t// Translate null to an empty string so that it doesn't serialize as 'null'\n\t\t\t\tvalue = value === null ? '' : value;\n\n\t\t\t\tif (result.length === 0) {\n\t\t\t\t\treturn [[encode(key, options), keyValueSep, encode(value, options)].join('')];\n\t\t\t\t}\n\n\t\t\t\treturn [[result, encode(value, options)].join(options.arrayFormatSeparator)];\n\t\t\t};\n\t\t}\n\n\t\tdefault: {\n\t\t\treturn key => (result, value) => {\n\t\t\t\tif (\n\t\t\t\t\tvalue === undefined\n\t\t\t\t\t|| (options.skipNull && value === null)\n\t\t\t\t\t|| (options.skipEmptyString && value === '')\n\t\t\t\t) {\n\t\t\t\t\treturn result;\n\t\t\t\t}\n\n\t\t\t\tif (value === null) {\n\t\t\t\t\treturn [\n\t\t\t\t\t\t...result,\n\t\t\t\t\t\tencode(key, options),\n\t\t\t\t\t];\n\t\t\t\t}\n\n\t\t\t\treturn [\n\t\t\t\t\t...result,\n\t\t\t\t\t[encode(key, options), '=', encode(value, options)].join(''),\n\t\t\t\t];\n\t\t\t};\n\t\t}\n\t}\n}\n\nfunction parserForArrayFormat(options) {\n\tlet result;\n\n\tswitch (options.arrayFormat) {\n\t\tcase 'index': {\n\t\t\treturn (key, value, accumulator) => {\n\t\t\t\tresult = /\\[(\\d*)]$/.exec(key);\n\n\t\t\t\tkey = key.replace(/\\[\\d*]$/, '');\n\n\t\t\t\tif (!result) {\n\t\t\t\t\taccumulator[key] = value;\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tif (accumulator[key] === undefined) {\n\t\t\t\t\taccumulator[key] = {};\n\t\t\t\t}\n\n\t\t\t\taccumulator[key][result[1]] = value;\n\t\t\t};\n\t\t}\n\n\t\tcase 'bracket': {\n\t\t\treturn (key, value, accumulator) => {\n\t\t\t\tresult = /(\\[])$/.exec(key);\n\t\t\t\tkey = key.replace(/\\[]$/, '');\n\n\t\t\t\tif (!result) {\n\t\t\t\t\taccumulator[key] = value;\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tif (accumulator[key] === undefined) {\n\t\t\t\t\taccumulator[key] = [value];\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\taccumulator[key] = [...accumulator[key], value];\n\t\t\t};\n\t\t}\n\n\t\tcase 'colon-list-separator': {\n\t\t\treturn (key, value, accumulator) => {\n\t\t\t\tresult = /(:list)$/.exec(key);\n\t\t\t\tkey = key.replace(/:list$/, '');\n\n\t\t\t\tif (!result) {\n\t\t\t\t\taccumulator[key] = value;\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tif (accumulator[key] === undefined) {\n\t\t\t\t\taccumulator[key] = [value];\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\taccumulator[key] = [...accumulator[key], value];\n\t\t\t};\n\t\t}\n\n\t\tcase 'comma':\n\t\tcase 'separator': {\n\t\t\treturn (key, value, accumulator) => {\n\t\t\t\tconst isArray = typeof value === 'string' && value.includes(options.arrayFormatSeparator);\n\t\t\t\tconst isEncodedArray = (typeof value === 'string' && !isArray && decode(value, options).includes(options.arrayFormatSeparator));\n\t\t\t\tvalue = isEncodedArray ? decode(value, options) : value;\n\t\t\t\tconst newValue = isArray || isEncodedArray ? value.split(options.arrayFormatSeparator).map(item => decode(item, options)) : (value === null ? value : decode(value, options));\n\t\t\t\taccumulator[key] = newValue;\n\t\t\t};\n\t\t}\n\n\t\tcase 'bracket-separator': {\n\t\t\treturn (key, value, accumulator) => {\n\t\t\t\tconst isArray = /(\\[])$/.test(key);\n\t\t\t\tkey = key.replace(/\\[]$/, '');\n\n\t\t\t\tif (!isArray) {\n\t\t\t\t\taccumulator[key] = value ? decode(value, options) : value;\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tconst arrayValue = value === null\n\t\t\t\t\t? []\n\t\t\t\t\t: value.split(options.arrayFormatSeparator).map(item => decode(item, options));\n\n\t\t\t\tif (accumulator[key] === undefined) {\n\t\t\t\t\taccumulator[key] = arrayValue;\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\taccumulator[key] = [...accumulator[key], ...arrayValue];\n\t\t\t};\n\t\t}\n\n\t\tdefault: {\n\t\t\treturn (key, value, accumulator) => {\n\t\t\t\tif (accumulator[key] === undefined) {\n\t\t\t\t\taccumulator[key] = value;\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\taccumulator[key] = [...[accumulator[key]].flat(), value];\n\t\t\t};\n\t\t}\n\t}\n}\n\nfunction validateArrayFormatSeparator(value) {\n\tif (typeof value !== 'string' || value.length !== 1) {\n\t\tthrow new TypeError('arrayFormatSeparator must be single character string');\n\t}\n}\n\nfunction encode(value, options) {\n\tif (options.encode) {\n\t\treturn options.strict ? strictUriEncode(value) : encodeURIComponent(value);\n\t}\n\n\treturn value;\n}\n\nfunction decode(value, options) {\n\tif (options.decode) {\n\t\treturn decodeComponent(value);\n\t}\n\n\treturn value;\n}\n\nfunction keysSorter(input) {\n\tif (Array.isArray(input)) {\n\t\treturn input.sort();\n\t}\n\n\tif (typeof input === 'object') {\n\t\treturn keysSorter(Object.keys(input))\n\t\t\t.sort((a, b) => Number(a) - Number(b))\n\t\t\t.map(key => input[key]);\n\t}\n\n\treturn input;\n}\n\nfunction removeHash(input) {\n\tconst hashStart = input.indexOf('#');\n\tif (hashStart !== -1) {\n\t\tinput = input.slice(0, hashStart);\n\t}\n\n\treturn input;\n}\n\nfunction getHash(url) {\n\tlet hash = '';\n\tconst hashStart = url.indexOf('#');\n\tif (hashStart !== -1) {\n\t\thash = url.slice(hashStart);\n\t}\n\n\treturn hash;\n}\n\nfunction parseValue(value, options) {\n\tif (options.parseNumbers && !Number.isNaN(Number(value)) && (typeof value === 'string' && value.trim() !== '')) {\n\t\tvalue = Number(value);\n\t} else if (options.parseBooleans && value !== null && (value.toLowerCase() === 'true' || value.toLowerCase() === 'false')) {\n\t\tvalue = value.toLowerCase() === 'true';\n\t}\n\n\treturn value;\n}\n\nexport function extract(input) {\n\tinput = removeHash(input);\n\tconst queryStart = input.indexOf('?');\n\tif (queryStart === -1) {\n\t\treturn '';\n\t}\n\n\treturn input.slice(queryStart + 1);\n}\n\nexport function parse(query, options) {\n\toptions = {\n\t\tdecode: true,\n\t\tsort: true,\n\t\tarrayFormat: 'none',\n\t\tarrayFormatSeparator: ',',\n\t\tparseNumbers: false,\n\t\tparseBooleans: false,\n\t\t...options,\n\t};\n\n\tvalidateArrayFormatSeparator(options.arrayFormatSeparator);\n\n\tconst formatter = parserForArrayFormat(options);\n\n\t// Create an object with no prototype\n\tconst returnValue = Object.create(null);\n\n\tif (typeof query !== 'string') {\n\t\treturn returnValue;\n\t}\n\n\tquery = query.trim().replace(/^[?#&]/, '');\n\n\tif (!query) {\n\t\treturn returnValue;\n\t}\n\n\tfor (const parameter of query.split('&')) {\n\t\tif (parameter === '') {\n\t\t\tcontinue;\n\t\t}\n\n\t\tconst parameter_ = options.decode ? parameter.replace(/\\+/g, ' ') : parameter;\n\n\t\tlet [key, value] = splitOnFirst(parameter_, '=');\n\n\t\tif (key === undefined) {\n\t\t\tkey = parameter_;\n\t\t}\n\n\t\t// Missing `=` should be `null`:\n\t\t// http://w3.org/TR/2012/WD-url-20120524/#collect-url-parameters\n\t\tvalue = value === undefined ? null : (['comma', 'separator', 'bracket-separator'].includes(options.arrayFormat) ? value : decode(value, options));\n\t\tformatter(decode(key, options), value, returnValue);\n\t}\n\n\tfor (const [key, value] of Object.entries(returnValue)) {\n\t\tif (typeof value === 'object' && value !== null) {\n\t\t\tfor (const [key2, value2] of Object.entries(value)) {\n\t\t\t\tvalue[key2] = parseValue(value2, options);\n\t\t\t}\n\t\t} else {\n\t\t\treturnValue[key] = parseValue(value, options);\n\t\t}\n\t}\n\n\tif (options.sort === false) {\n\t\treturn returnValue;\n\t}\n\n\t// TODO: Remove the use of `reduce`.\n\t// eslint-disable-next-line unicorn/no-array-reduce\n\treturn (options.sort === true ? Object.keys(returnValue).sort() : Object.keys(returnValue).sort(options.sort)).reduce((result, key) => {\n\t\tconst value = returnValue[key];\n\t\tif (Boolean(value) && typeof value === 'object' && !Array.isArray(value)) {\n\t\t\t// Sort object keys, not values\n\t\t\tresult[key] = keysSorter(value);\n\t\t} else {\n\t\t\tresult[key] = value;\n\t\t}\n\n\t\treturn result;\n\t}, Object.create(null));\n}\n\nexport function stringify(object, options) {\n\tif (!object) {\n\t\treturn '';\n\t}\n\n\toptions = {encode: true,\n\t\tstrict: true,\n\t\tarrayFormat: 'none',\n\t\tarrayFormatSeparator: ',', ...options};\n\n\tvalidateArrayFormatSeparator(options.arrayFormatSeparator);\n\n\tconst shouldFilter = key => (\n\t\t(options.skipNull && isNullOrUndefined(object[key]))\n\t\t|| (options.skipEmptyString && object[key] === '')\n\t);\n\n\tconst formatter = encoderForArrayFormat(options);\n\n\tconst objectCopy = {};\n\n\tfor (const [key, value] of Object.entries(object)) {\n\t\tif (!shouldFilter(key)) {\n\t\t\tobjectCopy[key] = value;\n\t\t}\n\t}\n\n\tconst keys = Object.keys(objectCopy);\n\n\tif (options.sort !== false) {\n\t\tkeys.sort(options.sort);\n\t}\n\n\treturn keys.map(key => {\n\t\tconst value = object[key];\n\n\t\tif (value === undefined) {\n\t\t\treturn '';\n\t\t}\n\n\t\tif (value === null) {\n\t\t\treturn encode(key, options);\n\t\t}\n\n\t\tif (Array.isArray(value)) {\n\t\t\tif (value.length === 0 && options.arrayFormat === 'bracket-separator') {\n\t\t\t\treturn encode(key, options) + '[]';\n\t\t\t}\n\n\t\t\treturn value\n\t\t\t\t.reduce(formatter(key), [])\n\t\t\t\t.join('&');\n\t\t}\n\n\t\treturn encode(key, options) + '=' + encode(value, options);\n\t}).filter(x => x.length > 0).join('&');\n}\n\nexport function parseUrl(url, options) {\n\toptions = {\n\t\tdecode: true,\n\t\t...options,\n\t};\n\n\tlet [url_, hash] = splitOnFirst(url, '#');\n\n\tif (url_ === undefined) {\n\t\turl_ = url;\n\t}\n\n\treturn {\n\t\turl: url_?.split('?')?.[0] ?? '',\n\t\tquery: parse(extract(url), options),\n\t\t...(options && options.parseFragmentIdentifier && hash ? {fragmentIdentifier: decode(hash, options)} : {}),\n\t};\n}\n\nexport function stringifyUrl(object, options) {\n\toptions = {\n\t\tencode: true,\n\t\tstrict: true,\n\t\t[encodeFragmentIdentifier]: true,\n\t\t...options,\n\t};\n\n\tconst url = removeHash(object.url).split('?')[0] || '';\n\tconst queryFromUrl = extract(object.url);\n\n\tconst query = {\n\t\t...parse(queryFromUrl, {sort: false}),\n\t\t...object.query,\n\t};\n\n\tlet queryString = stringify(query, options);\n\tif (queryString) {\n\t\tqueryString = `?${queryString}`;\n\t}\n\n\tlet hash = getHash(object.url);\n\tif (object.fragmentIdentifier) {\n\t\tconst urlObjectForFragmentEncode = new URL(url);\n\t\turlObjectForFragmentEncode.hash = object.fragmentIdentifier;\n\t\thash = options[encodeFragmentIdentifier] ? urlObjectForFragmentEncode.hash : `#${object.fragmentIdentifier}`;\n\t}\n\n\treturn `${url}${queryString}${hash}`;\n}\n\nexport function pick(input, filter, options) {\n\toptions = {\n\t\tparseFragmentIdentifier: true,\n\t\t[encodeFragmentIdentifier]: false,\n\t\t...options,\n\t};\n\n\tconst {url, query, fragmentIdentifier} = parseUrl(input, options);\n\n\treturn stringifyUrl({\n\t\turl,\n\t\tquery: includeKeys(query, filter),\n\t\tfragmentIdentifier,\n\t}, options);\n}\n\nexport function exclude(input, filter, options) {\n\tconst exclusionFilter = Array.isArray(filter) ? key => !filter.includes(key) : (key, value) => !filter(key, value);\n\n\treturn pick(input, exclusionFilter, options);\n}\n","import * as queryString from './base.js';\n\nexport default queryString;\n"],"names":["_ref","placeholder","defaultValue","React","method","action","className","type","name","required","minLength","id","FontAwesomeIcon","icon","faMagnifyingGlass","title","slug","description","cover","coverAlt","postedDate","image","getImage","localFile","Link","to","GatsbyImage","alt","sortByData","data","location","t","useTranslation","language","useI18next","blogPostDataDesc","_data$blogPostDataDes","nodes","blogPostDataAsc","_data$blogPostDataAsc","editorPick","editorPicks","_data$editorPicks","blogPosts","setBlogPosts","activePage","setActivePage","sortAsc","setSortAsc","totalPage","setTotalPage","numPage","setNumPage","blogPostData","page","sort","queryString","search","parseInt","toString","generatePosts","length","JSON","stringify","indexStart","indexEnd","filterByLang","filter","_ref2","strapi_id","_editorPick$","filterByLimit","slice","total","Math","ceil","pagination","generateQueryString","isAsc","Layout","H1","classes","EditorPick","_editorPick$2","_editorPick$3","_editorPick$4","_editorPick$5","_editorPick$6","_editorPick$7","BlogSearch","toLowerCase","faArrowUpWideShort","faArrowDownWideShort","onClick","window","href","map","_ref3","key","BlogCard","faChevronLeft","x","i","faChevronRight","Helper","Head","Seo","c","m","l","last","left","right","range","rangeWithDots","push","token","singleMatcher","RegExp","multiMatcher","decodeComponents","components","split","decodeURIComponent","join","Array","prototype","concat","call","decode","input","tokens","match","decodeUriComponent","encodedURI","TypeError","replaceMap","exec","result","entries","Object","keys","replace","customDecodeURIComponent","splitOnFirst","string","separator","separatorIndex","indexOf","includeKeys","object","predicate","isArray","descriptor","getOwnPropertyDescriptor","enumerable","defineProperty","Reflect","ownKeys","encodeFragmentIdentifier","Symbol","validateArrayFormatSeparator","value","encode","options","strict","encodeURIComponent","charCodeAt","toUpperCase","keysSorter","a","b","Number","removeHash","hashStart","parseValue","parseNumbers","isNaN","trim","parseBooleans","extract","queryStart","parse","query","arrayFormat","arrayFormatSeparator","formatter","accumulator","undefined","includes","isEncodedArray","newValue","item","test","arrayValue","flat","parserForArrayFormat","returnValue","create","parameter","parameter_","key2","value2","reduce","Boolean","shouldFilter","skipNull","skipEmptyString","index","keyValueSep","encoderForArrayFormat","objectCopy","parseUrl","url","url_","hash","parseFragmentIdentifier","fragmentIdentifier","stringifyUrl","getHash","urlObjectForFragmentEncode","URL","pick","exclude"],"sourceRoot":""}