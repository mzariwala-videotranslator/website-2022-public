{"version":3,"file":"component---src-pages-available-languages-index-tsx-5560b4d6a9de99a2ce11.js","mappings":"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","sources":["webpack://video-translator-ai/./src/components/Typography.tsx","webpack://video-translator-ai/./src/pages/available-languages/index.tsx"],"sourcesContent":["import React from \"react\";\n\ninterface TypographyProps {\n  children: JSX.Element | JSX.Element[] | any;\n  classes?: string;\n}\n\nexport const H1 = ({ children, classes = \"\" }: TypographyProps) => {\n  return <div className={`hero-title fs-2 fw-bold ${classes}`}>{children}</div>;\n};\n\nexport const H2 = ({\n  children,\n  classes = \"\",\n  hasSeparator = false,\n}: TypographyProps & { hasSeparator?: boolean }) => {\n  return (\n    <div\n      className={`hero-title fs-3 fw-bold ${classes} ${\n        hasSeparator ? \"has-separator\" : \"\"\n      }`}\n    >\n      {children}\n    </div>\n  );\n};\n\nexport const BodyText = ({ children, classes = \"\" }: TypographyProps) => {\n  return <p className={`fs-5 fw-light ${classes}`}>{children}</p>;\n};\n\nexport const BodyContentText = ({\n  children,\n  classes = \"\",\n}: TypographyProps) => {\n  return <p className={`fw-light ${classes}`}>{children}</p>;\n};\n","import React, { useEffect, useState } from \"react\";\nimport type { HeadFC, PageProps } from \"gatsby\";\nimport { graphql } from \"gatsby\";\nimport { useTranslation } from \"gatsby-plugin-react-i18next\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faMagnifyingGlass } from \"@fortawesome/free-solid-svg-icons\";\n\nimport Layout from \"../../components/Layout\";\nimport Helper from \"../../components/Helper\";\nimport { H1 } from \"../../components/Typography\";\n\nconst AvailableLanguagesPage: React.FC<PageProps> = ({ data }: any) => {\n  const { t } = useTranslation();\n  const [input, setInput] = useState(\"\");\n  const [transcriptionData, setTranscriptionData] = useState(\n    data.transcriptionLang.edges || []\n  );\n  const [translationData, setTranslationData] = useState(\n    data.translationLang.edges || []\n  );\n  const [dubbingData, setDubbingData] = useState(data.dubbingLang.edges || []);\n  const [toggle, setToggle] = useState(false);\n\n  const filterData = () => {\n    if (input.length > 0) {\n      const filteredTranscription = data.transcriptionLang.edges.filter(\n        ({ node }: any) =>\n          node?.language?.toLowerCase()?.includes(input.toLowerCase())\n      );\n      const filteredTranslation = data.translationLang.edges.filter(\n        ({ node }: any) =>\n          node?.language?.toLowerCase()?.includes(input.toLowerCase())\n      );\n      const filteredDubbing = data.dubbingLang.edges.filter(({ node }: any) =>\n        node?.language?.toLowerCase()?.includes(input.toLowerCase())\n      );\n      setTranscriptionData(filteredTranscription);\n      setTranslationData(filteredTranslation);\n      setDubbingData(filteredDubbing);\n    } else {\n      setTranscriptionData(data.transcriptionLang.edges);\n      setTranslationData(data.translationLang.edges);\n      setDubbingData(data.dubbingLang.edges);\n    }\n  };\n\n  const onSearch = (e: React.FormEvent<HTMLFormElement>) => {\n    e.preventDefault();\n    filterData();\n  };\n\n  const onClickLanguage = (language: string) => {\n    setInput(language);\n    setToggle(!toggle);\n  };\n\n  useEffect(() => {\n    filterData();\n  }, [toggle]);\n\n  return (\n    <Layout>\n      <div className=\"container my-5 min-h-page\">\n        <div className=\"pricing-content text-center text-white my-5 p-5 rounded-2\">\n          <H1 classes=\"mb-3 text-center\">{t(\"alSectionTitle\")}</H1>\n          <div className=\"d-flex flex-column align-items-center justify-content-center gap-4\">\n            <span className=\"fs-5\">{t(\"alSectionDescription\")}</span>\n          </div>\n          <form\n            onSubmit={onSearch}\n            className=\"input-search-language input-group mt-4 mx-auto\"\n          >\n            <input\n              type=\"text\"\n              className=\"form-control\"\n              placeholder={t(\"typeHere\") || \"\"}\n              aria-label={t(\"typeHere\") || \"\"}\n              aria-describedby=\"button-addon2\"\n              onChange={(e) => setInput(e.target.value)}\n              value={input}\n            />\n            <button\n              className=\"btn btn-primary\"\n              type=\"submit\"\n              id=\"button-addon2\"\n            >\n              <FontAwesomeIcon icon={faMagnifyingGlass} />\n            </button>\n          </form>\n        </div>\n        <div className=\"row my-5\">\n          <div className=\"col-12 col-md-6 col-lg-4 mb-4 mb-lg-0\">\n            <div className=\"mb-3 fw-bold\">{t(\"transcription\")}</div>\n            <div className=\"d-flex flex-column gap-1\">\n              {transcriptionData.map(({ node }: any) => (\n                <button\n                  key={`transcription-${node?.id}`}\n                  className=\"btn btn-outline-dark text-start\"\n                  onClick={() => onClickLanguage(node?.language)}\n                >\n                  {node?.language}\n                </button>\n              ))}\n            </div>\n          </div>\n          <div className=\"col-12 col-md-6 col-lg-4 mb-4 mb-lg-0\">\n            <div className=\"mb-3 fw-bold\">{t(\"translation\")}</div>\n            <div className=\"d-flex flex-column gap-1\">\n              {translationData.map(({ node }: any) => (\n                <button\n                  key={`translation-${node?.id}`}\n                  className=\"btn btn-outline-dark text-start\"\n                  onClick={() => onClickLanguage(node?.language)}\n                >\n                  {node?.language}\n                </button>\n              ))}\n            </div>\n          </div>\n          <div className=\"col-12 col-md-6 col-lg-4 mb-4 mb-lg-0\">\n            <div className=\"mb-3 fw-bold\">{t(\"dubbing\")}</div>\n            <div className=\"d-flex flex-column gap-1\">\n              {dubbingData.map(({ node }: any) => (\n                <button\n                  key={`dubbing-${node?.id}`}\n                  className=\"btn btn-outline-dark text-start\"\n                  onClick={() => onClickLanguage(node?.language)}\n                >\n                  {node?.language}\n                </button>\n              ))}\n            </div>\n          </div>\n        </div>\n      </div>\n      <Helper />\n    </Layout>\n  );\n};\n\nexport const query = graphql`\n  query ($language: String!) {\n    transcriptionLang: allStrapiAvailableLanguage(\n      filter: { transcription: { eq: true } }\n      sort: { language: ASC }\n    ) {\n      edges {\n        node {\n          id\n          language\n          transcription\n          translation\n          dubbing\n        }\n      }\n    }\n    translationLang: allStrapiAvailableLanguage(\n      filter: { translation: { eq: true } }\n      sort: { language: ASC }\n    ) {\n      edges {\n        node {\n          id\n          language\n          transcription\n          translation\n          dubbing\n        }\n      }\n    }\n    dubbingLang: allStrapiAvailableLanguage(\n      filter: { dubbing: { eq: true } }\n      sort: { language: ASC }\n    ) {\n      edges {\n        node {\n          id\n          language\n          transcription\n          translation\n          dubbing\n        }\n      }\n    }\n    locales: allLocale(\n      filter: {\n        ns: { in: [\"index\", \"available-languages\"] }\n        language: { eq: $language }\n      }\n    ) {\n      edges {\n        node {\n          ns\n          data\n          language\n        }\n      }\n    }\n  }\n`;\n\nexport default AvailableLanguagesPage;\n\nexport const Head: HeadFC = () => <title>Available Languages</title>;\n"],"names":["H1","_ref","children","classes","React","className","H2","_ref2","hasSeparator","BodyText","_ref3","BodyContentText","_ref4","data","t","useTranslation","input","setInput","useState","transcriptionData","setTranscriptionData","transcriptionLang","edges","translationData","setTranslationData","translationLang","dubbingData","setDubbingData","dubbingLang","toggle","setToggle","filterData","length","filteredTranscription","filter","node","language","_node$language","toLowerCase","_node$language$toLowe","includes","filteredTranslation","_node$language2","_node$language2$toLow","filteredDubbing","_node$language3","_node$language3$toLow","onClickLanguage","useEffect","Layout","onSubmit","e","preventDefault","type","placeholder","onChange","target","value","id","FontAwesomeIcon","icon","faMagnifyingGlass","map","_ref5","key","onClick","_ref6","_ref7","Helper","Head"],"sourceRoot":""}